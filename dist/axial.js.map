{"version":3,"sources":["webpack:///webpack/bootstrap 8e5716162b130bfd5c2b","webpack:///./index.js","webpack:///./lib/axial.js","webpack:///./lib/const.js"],"names":["module","exports","require","Define_Axial","CONST","BLANK_INTERFACE_NAME","_arrayTypes","_listeners","_interfaces","_instances","_instancesCreated","_bindings","_arrayMembers","ARRAY_MEMBERS","_arrayMutators","ARRAY_MUTATORS","_validKeys","VALID_KEYS","_logListeners","_logListenerCount","util","T","_interfaceId","_instanceArrayId","_instanceIds","_isValidKey","key","indexOf","getInstanceId","iface","ifaceId","id","Exception","ExtendableBuiltin","cls","apply","arguments","prototype","Object","create","setPrototypeOf","Error","AxialUnsupportedType","value","type","AxialInstance","typeOf","e","message","AxialInvalidType","given","expected","instance","property","instString","toString","path","AxialInvalidNumericRange","min","max","AxialInvalidStringPattern","pattern","AxialUndefinedValue","source","AxialTypeAlreadyDefined","typeName","AxialInvalidArgument","index","AxialMissingProperty","object","AxialUnexpectedProperty","AxialDockRejection","Errors","UnsupportedType","InvalidType","InvalidNumericRange","InvalidStringPattern","UndefinedValue","TypeAlreadyDefined","InvalidArgument","MissingProperty","IllegalProperty","DockRejection","AxialType","_defaultValue","undefined","_required","_baseType","_validate","_exports","call","is","copy","constructor","hasOwnProperty","baseType","options","clone","isPlainObject","defaultValue","bool","_id","AxialTypePrototype","AxialNull","AxialUndefined","AxialString","_pattern","match","AxialNumber","_min","Number","MIN_SAFE_INTEGER","_max","MAX_SAFE_INTEGER","_clip","clip","Math","opts","extend","AxialBoolean","AxialDate","Date","AxialRegex","RegExp","AxialFunction","Function","AxialArray","_type","isArray","Array","l","length","i","item","t","validate","AxialObject","AxialReference","AxialInterface","interfaceId","parentInterface","_properties","Map","_allProps","_parentInterface","_methods","define","Axial","Interface","push","expandDotSyntaxKeys","setObjectAtPath","definedTypes","typeDef","Type","typeArray","expandArray","isType","AxialInterfaceProperty","set","getType","defaultValues","owner","has","get","subPath","split","slice","join","obj","primaryInterface","forEach","defineAccessors","isRequired","init","entries","k","name","rootInterface","fn","keys","interfaceName","_iparent","isRootInterface","AxialAnything","_state","isWatching","super","arrayAtKey","interfaceToIndex","methods","bind","descriptor","definePrivateProperty","mem","defineProperty","enumerable","val","ifaceOrId","onAssign","role","cancel","canceled","dispatch","target","method","configurable","sourceValue","targetValue","equals","AxialInstanceArray","_fn","splice","eventData","returnValue","listeners","shouldThrowIfNotFound","root","rootOwner","getObjectAtPath","array","dispose","json","toPlainObject","prettyPrint","JSON","stringify","types","_key","_types","_path","pType","hasValidated","errors","_array","didValidate","error","oldValue","rawValue","newValue","numType","shouldAssign","_isAxialBound","oldOwner","event","newOwner","preserveOwner","onAssigned","primaryType","find","AxialBinding","handler","_instance","_property","_handler","_active","unbind","_indexLength","self","convertArray","member","args","isMutator","isItem","oldLength","bindIndexes","arrayMethod","newLength","arrayType","primaryArrayType","rawArray","deepPrimaryArrayType","targetArray","sourceArray","sourceItem","targetItem","items","argsToItems","fromIndex","toIndex","move","shift","pop","unshift","o","getPrototypeOf","merge","_source","_target","nativeOnly","Null","Undefined","String","Boolean","Regex","getObjectPaths","includeBranchPaths","ref","walk","p","getObjectPathValues","keyValues","isBranch","steps","multiSetObjectAtPath","pathOrObject","modifiedPaths","resolver","inArray","outArray","refs","props","map","v","typeId","Reference","Anything","orUndefined","orNull","orUndefinedOrNull","getInterface","ifaceArray","interfaceIds","filter","interfaces","instances","bindings","bindingInfo","binding","getInstance","count","includeSubInterfaces","log","addLogListener","console","arg","ex","ifaceNames","addDefaultLogListeners","$","$$","new","window","ARRAY_MUTATORS_REQUIRE_ARGS_VALIDATED"],"mappings":"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","file":"axial.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8e5716162b130bfd5c2b","module.exports = require('./lib/axial');\n\n\n// WEBPACK FOOTER //\n// ./index.js","module.exports = (function Define_Axial () {\n  const CONST = require('./const');\n  const BLANK_INTERFACE_NAME = CONST.BLANK_INTERFACE_NAME;\n  const _arrayTypes = {};\n  const _listeners = [];\n  const _interfaces = {};\n  const _instances = {};\n  const _instancesCreated = [];\n  const _bindings = [];\n  const _arrayMembers = CONST.ARRAY_MEMBERS;\n  const _arrayMutators = CONST.ARRAY_MUTATORS;\n  const _validKeys = CONST.VALID_KEYS;\n  const _logListeners = {};\n\n  let _logListenerCount = 0;\n  let util, T;\n  let _interfaceId = 0, _instanceArrayId = 0, _instanceIds = {};\n\n  function _isValidKey (key) {\n    return _validKeys.indexOf(key) > -1;\n  }\n\n  function getInstanceId (iface) {\n    if (!iface) {\n      return '0';\n    }\n    const ifaceId = iface.id;\n    if (!_instanceIds[ifaceId]) {\n      _instanceIds[ifaceId] = 0;\n    }\n    _instanceIds[ifaceId]++;\n    return iface.id + '#' + _instanceIds[ifaceId];\n  }\n\n  // -------------------------------------------------------------------------------------- Errors\n  const Exception = (function ExtendableBuiltin(cls){\n    function ExtendableBuiltin(){\n      cls.apply(this, arguments);\n    }\n    ExtendableBuiltin.prototype = Object.create(cls.prototype);\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n    return ExtendableBuiltin;\n  })(Error);\n\n  class AxialUnsupportedType extends Exception {\n    constructor (value, iface, key) {\n      let type;\n      if (value instanceof AxialInstance) {\n        type = value.iface.id + '(AxialInstance)';\n      } else {\n        try {\n          type = util.typeOf(value).id;\n        } catch (e) {\n          type = typeof value;\n        }\n      }\n      const message = `Unsupported Axial type \"${type}\"${iface ? ' used to define property \"' + key + '\" of interface \"' + iface.id + '\"' : ''}. Only instances of AxialType can be provided.`;\n      super(message);\n      this.value = value;\n      this.message = message;\n    }\n  }\n\n  class AxialInvalidType extends Exception {\n    constructor (given, expected, instance, property) {\n      const instString = instance ? instance.toString() : '?';\n      const message = 'Invalid type for property \"' + property.path + `\" ~ \"${given}\" given, \"${expected}\" expected.`;\n      super(message);\n      this.given = given;\n      this.expected = expected;\n      this.instance = instance;\n      this.property = property;\n      this.message = message;\n    }\n  }\n\n  class AxialInvalidNumericRange extends Exception {\n    constructor (given, min, max) {\n      const message = `Invalid numeric range - expected [${min} .. ${max}], given ${given}.`;\n      super(message);\n      this.given = given;\n      this.min = min;\n      this.max = max;\n      this.message = message;\n    }\n  }\n\n  class AxialInvalidStringPattern extends Exception {\n    constructor (given, pattern) {\n      const message = `Invalid string pattern - expected \"${pattern}\", given \"${given}\".`;\n      super(message);\n      this.given = given;\n      this.pattern = pattern;\n      this.message = message;\n    }\n  }\n\n  class AxialUndefinedValue extends Exception {\n    constructor (source, path) {\n      const message = `Undefined value for object path \"${path}\".`;\n      super(message);\n      this.source = source;\n      this.path = path;\n      this.message = message;\n    }\n  }\n\n  class AxialTypeAlreadyDefined extends Exception {\n    constructor (typeName, key, iface) {\n      const message = `Type \"${typeName}\" is already defined for property \"${key}\" in schema \"${iface.id}\".`;\n      super(message);\n      this.typeName = typeName;\n      this.key = key;\n      this.iface = iface;\n      this.message = message;\n    }\n  }\n\n  class AxialInvalidArgument extends Exception {\n    constructor (index, expected, given) {\n      const message = `Invalid argument #${index} - Expected \"${expected}\", given \"${given}\".`;\n      super(message);\n      this.index = index;\n      this.expected = expected;\n      this.given = given;\n    }\n  }\n\n  class AxialMissingProperty extends Exception {\n    constructor (key, iface, object) {\n      const message = `Missing interface property \"${key}\" from given object.`;\n      super(message);\n      this.key = key;\n      this.object = object;\n      this.iface = iface;\n      this.message = message;\n    }\n  }\n\n  class AxialUnexpectedProperty extends Exception {\n    constructor (key, iface, instance) {\n      const message = `Unexpected key \"${key}\" found in given object not declared in interface \"${iface.id}\".`;\n      super(message);\n      this.key = key;\n      this.iface = iface;\n      this.instance = instance;\n      this.message = message;\n    }\n  }\n\n  class AxialDockRejection extends Exception {\n    constructor (message) {\n      message = 'Dock Rejected: ' + message;\n      super(message);\n      this.message = message;\n    }\n  }\n\n  const Errors = {\n    UnsupportedType: AxialUnsupportedType,\n    InvalidType: AxialInvalidType,\n    InvalidNumericRange: AxialInvalidNumericRange,\n    InvalidStringPattern: AxialInvalidStringPattern,\n    UndefinedValue: AxialUndefinedValue,\n    TypeAlreadyDefined: AxialTypeAlreadyDefined,\n    InvalidArgument: AxialInvalidArgument,\n    MissingProperty: AxialMissingProperty,\n    IllegalProperty: AxialUnexpectedProperty,\n    DockRejection: AxialDockRejection\n  };\n\n  // -------------------------------------------------------------------------------------- Types\n  class AxialType {\n    constructor () {\n      this._defaultValue = undefined;\n      this._required = false;\n      this._baseType = this;\n      this._validate = null;\n      this._exports = true;\n    }\n\n    static get id () {\n      return '?';\n    }\n\n    get id () {\n      return this._id || this.constructor.id;\n    }\n\n    validate (value, instance, property) {\n      if (typeof this._validate === 'function') {\n        return this._validate.call(instance, value);\n      }\n      if (!this.is(value)) {\n        //given, expected, key, instance\n        throw new AxialInvalidType(this.id, util.typeOf(value).id, instance, property);\n      }\n    }\n\n    is (value) {\n      return typeof value === this.id;\n    }\n\n    toString () {\n      return this.id;\n    }\n\n    clone () {\n      const copy = new this.constructor;\n      for (let key in this) {\n        if (this.hasOwnProperty(key)) {\n          copy[key] = this[key];\n        }\n      }\n      copy._baseType = this.baseType;\n      return copy;\n    }\n\n    extend (options) {\n      const copy = this.clone();\n      if (util.isPlainObject(options)) {\n        for (let key in options) {\n          if (options.hasOwnProperty(key)) {\n            if (key === 'value') {\n              copy['_defaultValue'] = options[key];\n            } else {\n              copy['_' + key] = options[key];\n            }\n          }\n        }\n      } else if (typeof options !== 'undefined') {\n        copy._defaultValue = options;\n      }\n      return copy;\n    }\n\n    get baseType () {\n      return this._baseType ? this._baseType : this;\n    }\n\n    defaultValue (value) {\n      const copy = this.clone();\n      copy._defaultValue = value;\n      return copy;\n    }\n\n    value (value) {\n      return this.defaultValue(value);\n    }\n\n    required () {\n      const copy = this.clone();\n      copy._required = true;\n      return copy;\n    }\n\n    exports (bool) {\n      const copy = this.clone();\n      copy._exports = bool;\n      return copy;\n    }\n  }\n\n  const AxialTypePrototype = AxialType.prototype;\n\n  class AxialNull extends AxialType {\n    constructor () {\n      super();\n      this._defaultValue = null;\n    }\n\n    static get id () {\n      return 'null';\n    }\n\n    is (value) {\n      return value === null;\n    }\n  }\n\n  class AxialUndefined extends AxialType {\n    constructor () {\n      super();\n      this._defaultValue = undefined;\n    }\n\n    static get id () {\n      return 'undefined';\n    }\n\n    is (value) {\n      return typeof value === 'undefined';\n    }\n  }\n\n  class AxialString extends AxialType {\n    constructor () {\n      super();\n      this._pattern = null;\n      this._defaultValue = '';\n    }\n\n    validate (value, instance, property) {\n      if (typeof this._validate === 'function') {\n        return this._validate.call(instance, value);\n      }\n      if (!this.is(value)) {\n        if (typeof value !== 'string') {\n          throw new AxialInvalidType(util.typeOf(value).id, 'string', instance, property);\n        }\n        throw new AxialInvalidStringPattern(value, this._pattern);\n      }\n    }\n\n    is (value) {\n      return AxialTypePrototype.is.call(this, value)\n        && (this._pattern ? !!value.match(this._pattern) : true);\n    }\n\n    static get id () {\n      return 'string';\n    }\n  }\n\n  class AxialNumber extends AxialType {\n    constructor () {\n      super();\n      this._min = Number.MIN_SAFE_INTEGER;\n      this._max = Number.MAX_SAFE_INTEGER;\n      this._defaultValue = 0;\n    }\n\n    validate (value, instance, property) {\n      if (typeof this._validate === 'function') {\n        return this._validate.call(instance, value);\n      }\n      if (!this.is(value)) {\n        if (typeof value !== 'number') {\n          throw new AxialInvalidType('number', util.typeOf(value).id, instance, property);\n        }\n        throw new AxialInvalidNumericRange(value, this._min, this._max);\n      }\n    }\n\n    is (value) {\n      if (this._clip === true) {\n        value = this.clip(value);\n      }\n      return AxialTypePrototype.is.call(this, value)\n        && (value >= this._min && value <= this._max);\n    }\n\n    clip (value) {\n      value = Math.max(value, this._min);\n      value = Math.min(value, this._max);\n      return value;\n    }\n\n    static get id () {\n      return 'number';\n    }\n\n    between (min, max, clip) {\n      const opts = {\n        clip: !!clip\n      };\n      if (typeof min === 'number') {\n        opts.min = min;\n      }\n      if (typeof max === 'number') {\n        opts.max = max;\n      }\n      return this.extend(opts);\n    }\n  }\n\n  class AxialBoolean extends AxialType {\n    constructor () {\n      super();\n      this._defaultValue = false;\n    }\n\n    static get id () {\n      return 'boolean';\n    }\n  }\n\n  class AxialDate extends AxialType {\n    constructor () {\n      super();\n      this._defaultValue = new Date();\n    }\n\n    static get id () {\n      return 'date';\n    }\n\n    is (value) {\n      return value instanceof Date;\n    }\n  }\n\n  class AxialRegex extends AxialType {\n    constructor () {\n      super();\n      this._defaultValue = new RegExp('.*', 'i');\n    }\n\n    static get id () {\n      return 'regex';\n    }\n\n    is (value) {\n      return value instanceof RegExp;\n    }\n  }\n\n  class AxialFunction extends AxialType {\n    constructor () {\n      super();\n      this._defaultValue = new Function();\n    }\n\n    static get id () {\n      return 'function';\n    }\n\n    is (value) {\n      return typeof value === 'function';\n    }\n  }\n\n  class AxialArray extends AxialType {\n    constructor (type) {\n      super();\n      this._type = type;\n      this._defaultValue = [];\n    }\n\n    static get id () {\n      return 'array';\n    }\n\n    is (value) {\n      const isArray = Array.isArray(value);\n      if (isArray) {\n        if (this._type instanceof AxialType) {\n          const l = value.length;\n          for (let i = 0; i < l; i++) {\n            if (!this._type.is(value[i])) {\n              return false;\n            }\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isItem (item) {\n      if (this._type) {\n        return util.typeOf(item).id === this._type.id;\n      }\n      return true;\n    }\n\n    validate (value, instance, property) {\n      if (!Array.isArray(value)) {\n        throw new AxialInvalidType(this.id, util.typeOf(value).id, instance, property);\n      }\n      if (this._type) {\n        const l = value.length;\n        const t = this._type;\n        for (let i = 0; i < l; i++) {\n          t.validate(value[i], instance, property);\n        }\n      }\n    }\n\n    get type () {\n      return this._type;\n    }\n  }\n\n  class AxialObject extends AxialType {\n    constructor () {\n      super();\n      this._defaultValue = {};\n    }\n\n    static get id () {\n      return 'object';\n    }\n\n    is (value) {\n      return util.isPlainObject(value) || (typeof value === 'object' && (value !== null && !Array.isArray(value)));\n    }\n  }\n\n  class AxialReference extends AxialType {\n    constructor () {\n      super();\n      this._defaultValue = null;\n    }\n\n    static get id () {\n      return 'reference';\n    }\n\n    is (value) {\n      return value instanceof AxialInstance;\n    }\n\n    validate (value, instance, property) {\n      if (value === null) {\n        return true;\n      }\n\n      if (!(value instanceof AxialInstance)) {\n        throw new AxialInvalidType(util.typeOf(value).id, 'AxialInstance', instance, property);\n      }\n    }\n  }\n\n  class AxialInterface extends AxialObject {\n    constructor (interfaceId = BLANK_INTERFACE_NAME, prototype, parentInterface) {\n      super();\n\n      if (util.isPlainObject(interfaceId) && typeof prototype === 'undefined') {\n        // handle case where just single object prototype argument given\n        prototype = interfaceId;\n        interfaceId = BLANK_INTERFACE_NAME;\n      }\n\n      if (interfaceId === BLANK_INTERFACE_NAME) {\n        interfaceId += ++_interfaceId;\n      }\n\n      this._id = interfaceId;\n      this._properties = new Map();\n      this._allProps = new Map();\n      this._parentInterface = parentInterface;\n      this._methods = new Map();\n\n      this.define(prototype);\n\n      if (interfaceId) {\n        Axial.Interface[this._id] = this;\n      }\n\n      const _id = this._id;\n      _interfaces[_id] = _interfaces[_id] ? _interfaces[_id] : [];\n      _interfaces[_id].push(this);\n    }\n\n    define (prototype) {\n      util.expandDotSyntaxKeys(prototype, (path, key, object) => {\n        util.setObjectAtPath(prototype, path, object);\n      });\n\n      for (let key in prototype) {\n        if (prototype.hasOwnProperty(key)) {\n          let definedTypes = {};\n          let typeDef = prototype[key];\n          const Type = Axial.typeOf(typeDef);\n\n          if (!(typeDef instanceof AxialType) && !(Array.isArray(typeDef))) {\n            if ((Type instanceof AxialObject) === false) {\n              // extend type if given type\n              typeDef = Type.extend(typeDef);\n            }\n          }\n\n          const path = this._id ? this._id + '.' + key : `${BLANK_INTERFACE_NAME}.` + key;\n\n          let typeArray = Array.isArray(typeDef) ? typeDef : [typeDef];\n\n          if (util.isPlainObject(typeDef)) {\n            typeArray = [new AxialInterface(path, typeDef, this)];\n          } else {\n            // ensure type is wrapped in array, expand/flatten any inner arrays\n            typeArray = util.expandArray(typeArray);\n\n            // check type is only defined once and is AxialType\n            for (let i = 0; i < typeArray.length; i++) {\n              let t = typeArray[i];\n              if (!util.isType(t)) {\n                // throw when type not found\n                throw new AxialUnsupportedType(t, this, key);\n              }\n              let typeName = t.id;\n              if (definedTypes[typeName]) {\n                // throw when type defined multiple times\n                throw new AxialTypeAlreadyDefined(t.id, key, this);\n              } else {\n                // mark type as defined\n                definedTypes[typeName] = true;\n              }\n            }\n          }\n\n          // create property\n          const property = new AxialInterfaceProperty(this, key, typeArray, path);\n\n          // store property\n          this._properties.set(key, property);\n\n          if (property.is(Axial.Function)) {\n            // track default function value in this interfaces known methods\n            this._methods.set(key, property.getType(Axial.Function)._defaultValue);\n          }\n        }\n      }\n    }\n\n    create (defaultValues = {}, owner) {\n      // create instance\n      const instance = new AxialInstance(this, owner);\n\n      // check undefined keys are not being passed\n      const isPlainObject = util.isPlainObject(defaultValues);\n\n      if (isPlainObject) {\n        util.expandDotSyntaxKeys(defaultValues, (path, key, object) => {\n          if (!this._properties.has(key) && !_isValidKey(key)) {\n            throw new AxialUnexpectedProperty(key, this, instance);\n          }\n          const property = this._properties.get(key);\n          const subPath = path.split('.').slice(1).join('.');\n          const obj = {};\n          util.setObjectAtPath(obj, subPath, object);\n          defaultValues[key] = property.primaryInterface.create(obj, instance);\n        });\n      }\n\n      for (let key in defaultValues) {\n        if (isPlainObject && defaultValues.hasOwnProperty(key)) {\n          if (!this._properties.has(key) && !_isValidKey(key)) {\n            throw new AxialUnexpectedProperty(key, this, instance);\n          }\n        }\n      }\n\n      this._properties.forEach((property, key) => {\n        // install getters and setters for each property in interface\n        let value = defaultValues[key];\n\n        // expect property definition type to be valid AxialType\n        if (defaultValues.hasOwnProperty(key)) {\n          property.validate(value, instance);\n        }\n\n        // define the getter and setter property of the instance\n        instance.defineAccessors(property);\n\n        // if this is an interface, swap with AxialInstance from interface using plain object sub-tree as default values\n        if (property.is(Axial.Interface) && !value) {\n          value = property.primaryInterface.create(value, instance);\n        } else if (!defaultValues.hasOwnProperty(key)) {\n          if (property.isRequired) {\n            throw new AxialMissingProperty(key, this, defaultValues);\n          } else {\n            value = property.defaultValue;\n          }\n        }\n\n        // set the value of the property\n        if (typeof value !== 'undefined') {\n          property.set(instance, value);\n        }\n      });\n\n      // call init if present\n      const init= instance.init;\n      if (typeof init === 'function') {\n        init.call(instance);\n      }\n\n      return instance;\n    }\n\n    validate (value, instance, property) {\n      // check value is object\n      if (!AxialObject.prototype.is.call(this, value)) {\n        throw new AxialInvalidType(util.typeOf(value).id, this.id, instance, property);\n      }\n\n      // check value has no extra props\n      for (let key in value) {\n        if (value.hasOwnProperty(key)) {\n          if (!this._properties.has(key) && !_isValidKey(key)) {\n            throw new AxialUnexpectedProperty(key, this, instance);\n          }\n        }\n      }\n\n      // check each property validates\n      for (let [k, property] of this._properties.entries()) {\n        if (!value.hasOwnProperty(k) && property.isRequired) {\n          throw new AxialMissingProperty(k, this, value);\n        }\n        if (value.hasOwnProperty(k) || property.isRequired) {\n          property.validate(value[k], instance);\n        }\n      }\n    }\n\n    is (value) {\n      if (this._id === null) {\n        // the initial Interface type will never match values\n        return false;\n      }\n\n      if (!AxialObject.prototype.is.call(this, value)) {\n        return false;\n      }\n\n      // check has no extra props\n      for (let key in value) {\n        if (value.hasOwnProperty(key)) {\n          if (!this._properties.has(key)) {\n            return false;\n          }\n        }\n      }\n\n      // check each property validates\n      for (let [k, property] of this._properties.entries()) {\n        if (!value.hasOwnProperty(k) && property.isRequired) {\n          // missing property\n          return false;\n        }\n        try {\n          // value must validate\n          if (value.hasOwnProperty(k) || property.isRequired) {\n            property.validate(value[k]);\n          }\n        } catch (e) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    has (key) {\n      return this._properties.has(key);\n    }\n\n    property (name) {\n      let path = name;\n      if (this._id && path.indexOf(this._id) !== 0) {\n        path = this._id + '.' + path;\n      }\n      return this.rootInterface._allProps.get(path);\n    }\n\n    forEach (fn) {\n      for (let [key, property] of this._properties) {\n        fn(property, key);\n      }\n    }\n\n    keys () {\n      const keys = [];\n      for (let path of this.rootInterface._allProps.keys()) {\n        keys.push(path);\n      }\n      return keys;\n    }\n\n    get id () {\n      return this._id;\n    }\n\n    set id (id) {\n      if (this._id) {\n        delete Axial.Interface[this._id];\n        //test-all gone?\n      }\n      this._id = id;\n      Axial.Interface[this._id] = this;\n    }\n\n    get rootInterface () {\n      let iface = this;\n      while (iface._parentInterface) {\n        iface = iface._parentInterface;\n      }\n      return iface;\n    }\n\n    get isRootInterface () {\n      return this.rootInterface === this;\n    }\n\n    get isSubInterface () {\n      return !this.isRootInterface;\n    }\n\n    extend (interfaceName, prototype = {}) {\n      if (typeof interfaceName !== 'string') {\n        // TODO: make proper error\n        throw new Error('Interface requires name');\n      }\n      const iface = new AxialInterface(interfaceName, prototype, this._parentInterface);\n      iface._iparent = this;\n      let obj = this;\n      while (obj) {\n        for (let [key, property] of obj._properties.entries()) {\n          if (!iface.has(key)) {\n            iface._properties.set(key, property);\n            iface._allProps.set(interfaceName + '.' + key, property);\n          }\n        }\n        obj = obj._iparent;\n      }\n      return iface;\n    }\n  }\n\n  class AxialAnything extends AxialType {\n    static get id () {\n      return '*';\n    }\n\n    is (value) {\n      return true;\n    }\n\n    validate () {\n\n    }\n  }\n\n  // -------------------------------------------------------------------------------------- Instances\n  class AxialInstance {\n    constructor (iface, owner) {\n      this._state = {};\n      this._listeners = {};\n      this.isWatching = false;\n      this.id = getInstanceId(iface);\n      this.super = {};\n      this.owner = owner;\n      this.iface = iface;\n      if (iface) {\n        // track instance\n        const id = iface.id;\n        const arrayAtKey = _instances[id];\n        _instances[id] = Array.isArray(arrayAtKey) ? arrayAtKey : [];\n        _instances[id].push(this);\n        if (_instancesCreated.indexOf(iface) === -1) {\n          _instancesCreated.push(iface);\n        }\n\n        // go through each AxialInterface._methods and bind copy to this instance\n        let interfaceToIndex = iface;\n        while (interfaceToIndex) {\n          let methods = {};\n          this.super[interfaceToIndex.id] = methods;\n          for (let [key, fn] of interfaceToIndex._methods.entries()) {\n            methods[key] = fn.bind(this);\n          }\n          interfaceToIndex = interfaceToIndex._iparent;\n        }\n      }\n    }\n\n    definePrivateProperties (descriptor) {\n      for (let name in descriptor) {\n        if (descriptor.hasOwnProperty(name)) {\n          this.definePrivateProperty(name, descriptor[name]);\n        }\n      }\n    }\n\n    definePrivateProperty (name, value) {\n      const mem = {\n        value: value\n      };\n      Object.defineProperty(this, name, {\n        enumerable: false,\n        get () {\n          return mem.value;\n        },\n        set (val) {\n          mem.value = val;\n        }\n      });\n    }\n\n    typeOf (ifaceOrId) {\n      if (typeof ifaceOrId === 'string') {\n        return this.iface.id === ifaceOrId.id;\n      }\n      return this.iface === ifaceOrId;\n    }\n\n    shouldAssign (instance, property) {\n      if (typeof this.onAssign === 'function') {\n        let e = {\n          instance: instance,\n          property: property,\n          role: 'parent',\n          cancel (message) {\n            this.canceled = true;\n            this.message = message;\n          }\n        };\n        this.onAssign(e);\n        if (e.canceled) {\n          this.dispatch('reject', {\n            instance: this,\n            target: instance,\n            property: property,\n            method: 'assign',\n            role: 'parent',\n            key: property.key,\n            message: e.message\n          });\n          return false;\n        }\n      }\n\n      if (typeof instance.onAssign === 'function') {\n        let e = {\n          instance: this,\n          property: property,\n          role: 'child',\n          cancel (message) {\n            this.canceled = true;\n            this.message = message;\n          }\n        };\n        instance.onAssign(e);\n        if (e.canceled) {\n          instance.dispatch('reject', {\n            instance: instance,\n            target: this,\n            property: property,\n            method: 'assign',\n            role: 'child',\n            key: property.key,\n            message: e.message\n          });\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    defineAccessors (property) {\n      const key = property.key;\n      if (this.hasOwnProperty(key)) {\n        // TODO: use real error\n        throw new Error('Illegal property key');\n      }\n      Object.defineProperty(this, key, {\n        enumerable: true,\n        configurable: true,\n        // create setter for instance\n        set: function (value) {\n          // wrap property setter\n          return property.set(this, value);\n        }.bind(this),\n        // create getter for instance\n        get: function () {\n          // wrap property getter\n          return property.get(this);\n        }.bind(this)\n      });\n    }\n\n    equals (instance) {\n      if (this === instance) {\n        return true;\n      }\n      if (util.isPlainObject(instance)) {\n        try {\n          instance = this.iface.create(instance);\n        } catch (e) {\n          return false;\n        }\n      }\n      if (!(instance instanceof AxialInstance)) {\n        return false;\n      }\n      for (let [key, property] of this.iface._properties.entries()) {\n        const sourceValue = this._state[key];\n        const targetValue = instance[key];\n        if (sourceValue instanceof AxialInstance) {\n          if (targetValue instanceof AxialInstance) {\n            return sourceValue.equals(targetValue);\n          } else {\n            return false;\n          }\n        } else if (sourceValue instanceof AxialInstanceArray) {\n          if (targetValue instanceof AxialInstanceArray) {\n            return sourceValue.equals(targetValue);\n          } else {\n            return false;\n          }\n        } else if (sourceValue !== targetValue) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    bind (key, fn, method) {\n      if (typeof method === 'string') {\n        const _fn = fn;\n        fn = e => {\n          if (e.method === method) {\n            _fn(e);\n          }\n        }\n      }\n      this._listeners[key] = this._listeners[key] ? this._listeners[key] : [];\n      this._listeners[key].push(fn);\n    }\n\n    unbind (key, fn) {\n      if (arguments.length === 0) {\n        this._listeners = {};\n      } else if (key && !fn) {\n        this._listeners[key].length = 0;\n      } else {\n        const index = this._listeners[key].indexOf(fn);\n        this._listeners[key].splice(index, 1);\n      }\n    }\n\n    dispatch (key, eventData) {\n      // dispatch globally too\n      let returnValue = Axial.dispatch(eventData);\n      if (returnValue) {\n        // global handlers override local handlers\n        return returnValue;\n      }\n\n      // dispatch for each event listener attached to key\n      const listeners = this._listeners[key];\n      if (listeners) {\n        const l = listeners.length;\n        for (let i = 0; i < l; i++) {\n          returnValue = listeners[i](eventData);\n          if (returnValue) {\n            return returnValue;\n          }\n        }\n      }\n    }\n\n    onSetter (key, fn) {\n      return this.bind(key, fn, 'set');\n    }\n\n    onGetter (key, fn) {\n      return this.bind(key, fn, 'get');\n    }\n\n    keys () {\n      return [...this.iface._properties.keys()];\n    }\n\n    property (path) {\n      return this.iface.property(path);\n    }\n\n    value (path, shouldThrowIfNotFound) {\n      const root = this.rootOwner;\n      return util.getObjectAtPath(root, path, shouldThrowIfNotFound);\n    }\n\n    forEach (fn) {\n      const iface = this.iface;\n      for (let key of iface._properties.keys()) {\n        fn(key, this._state[key]);\n      }\n      return this;\n    }\n\n    map (fn) {\n      const array = [];\n      const iface = this.iface;\n      for (let key of iface._properties.keys()) {\n        array.push(fn(key, this._state[key]));\n      }\n      return array;\n    }\n\n    dispose () {\n      this.iface.forEach((property, key) => {\n        const item = this._state[key];\n        if (typeof item.dispose === 'function') {\n          item.dispose();\n        }\n        delete this._state[key];\n        delete this[key];\n      });\n      delete this;\n      delete _instances[this.iface.id];\n    }\n\n    get rootOwner() {\n      let obj = this.owner;\n      let root = this;\n      while (obj) {\n        root = obj;\n        obj = obj.owner;\n      }\n      return root;\n    }\n\n    get (key, defaultValue) {\n      const value = this[key];\n      return this._state.hasOwnProperty(key) ? value : defaultValue;\n    }\n\n    set (key, value) {\n      this[key] = value;\n      return this;\n    }\n\n    toPlainObject () {\n      try {\n        const json = {};\n        for (let key of this.iface._properties.keys()) {\n          const property = this.iface._properties.get(key);\n          if (!property.exports) {\n            debugger;\n            // TODO: double check all this serialisation...\n            continue;\n          }\n          const value = this._state[key];\n          const type = typeof value;\n          if (value instanceof AxialInstance) {\n            json[key] = value.toPlainObject();\n          } else if (value instanceof AxialInstanceArray) {\n            json[key] = value.toPlainObject();\n          } else if (type === 'string' || type === 'number' || type === 'boolean' || util.isPlainObject(value)) {\n            json[key] = value;\n          }\n        }\n        return json;\n      } catch (e) {\n        return e;\n      }\n    }\n\n    stringify (prettyPrint) {\n      return JSON.stringify.call(null, this.toPlainObject(), null, prettyPrint === true ? 4 : undefined);\n    }\n\n    toString () {\n      return (this.iface.isRootInterface ? '+-' : '>-') + this.id;\n    }\n\n    onAssign (instance, property) {\n      // return false to stop the instance from being assigned to the given property of this\n    }\n  }\n\n  /**\n   * TODO: Bubble up rejection errors to root owner.\n   * This way components can be designed to capture errors from docked children.\n   */\n\n  class AxialInterfaceProperty {\n    constructor (iface, key, types, path) {\n      this.iface = iface;\n      this._key = key;\n      this._types = types;\n      this._path = path;\n\n      iface.rootInterface._allProps.set(path, this);\n    }\n\n    is (type) {\n      const t = this._types;\n      const l = t.length;\n      for (let i = 0; i < l; i++) {\n        const pType = t[i];\n        if (pType instanceof type.constructor) {\n          if (pType instanceof AxialArray) {\n            if (type._type && pType._type !== type._type) {\n              return false;\n            }\n          }\n          return true;\n        }\n      }\n      return false;\n    }\n\n    validate (value, instance) {\n      const t = this._types;\n      const l = t.length;\n      let hasValidated = false;\n      let errors = [];\n      if (value instanceof AxialInstanceArray) {\n        value = value._array;\n      }\n      for (let i = 0; i < l; i++) {\n        let type = t[i];\n        try {\n          const didValidate = type.validate(value, instance, this) !== false;\n          if (!didValidate) {\n            return false;\n          }\n          hasValidated = true;\n        } catch (e) {\n          e.key = this.key;\n          errors.push({type:type, error:e});\n        }\n      }\n      if (!hasValidated) {\n        throw errors[0].error;\n      }\n      return true;\n    }\n\n    /**\n     * setter\n     * @param instance\n     * @param value\n     */\n    set (instance, value) {\n      const oldValue = instance._state[this._key];\n      const rawValue = value;\n      const type = util.typeOf(value);\n      let didValidate;\n\n      try {\n        didValidate = this.validate(value, instance);\n\n        if (!didValidate) {\n          // if any built-in or validate() validation method returns false,\n          // don't set the value\n          instance.dispatch('reject', {\n            instance: instance,\n            target: instance,\n            property: this,\n            method: 'set',\n            key: this._key,\n            value: value,\n            newValue: rawValue,\n            oldValue: oldValue\n          });\n          return;\n        }\n      } catch (e) {\n        instance.dispatch('reject', {\n          instance: instance,\n          target: instance,\n          property: this,\n          method: 'set',\n          key: this._key,\n          value: value,\n          newValue: rawValue,\n          oldValue: oldValue,\n          error: e\n        });\n        throw e;\n      }\n\n      // clip if number with clipping\n      if (this.is(Axial.Number) && type.id === 'number') {\n        const numType = this.getType(Axial.Number);\n        if (numType._clip) {\n          value = numType.clip(value);\n        }\n      }\n\n      // convert to AxialInstance if Interface and object given\n      if (this.is(Axial.Interface) && util.isPlainObject(value)) {\n        const iface = this.primaryInterface;\n        value = iface.create(value, instance);\n      }\n\n      // trigger assign events, give owner a chance to reject the child being assigned\n      if (value instanceof AxialInstance) {\n        const shouldAssign = instance.shouldAssign(value, this);\n        if (shouldAssign === false) {\n          return false;\n        }\n      }\n\n      // convert to AxialInstanceArray if array\n      if (this.is(Axial.Array()) && Array.isArray(value)) {\n        value = new AxialInstanceArray(instance, this, value);\n      }\n\n      // convert to bound function (if function)\n      if (this.is(Axial.Function) && typeof value === 'function' && !value._isAxialBound) {\n        const fn = value;\n        value = function () {\n          // dispatch call, execute function\n          instance.dispatch(this._key, {\n            instance: instance,\n            target: instance,\n            property: this,\n            method: 'call',\n            key: this._key,\n            value: arguments,\n            arguments: arguments,\n            newValue: fn,\n            oldValue: fn\n          });\n\n          return fn.apply(instance, arguments);\n        }.bind(this);\n        value._isAxialBound = true;\n      }\n\n      // set state\n      instance._state[this._key] = value;\n\n      // dispatch event\n      const returnValue = instance.dispatch(this._key, {\n        instance: instance,\n        target: instance,\n        property: this,\n        method: 'set',\n        key: this._key,\n        value: rawValue,\n        newValue: value,\n        oldValue: oldValue\n      });\n\n      if (returnValue) {\n        // re-set state from intercepted listener return value\n        instance[this._key] = returnValue;\n      }\n\n      if (value instanceof AxialInstance) {\n        // let instance value know it was docked\n        const oldOwner = value.owner;\n        value.owner = instance;\n\n        const event = {\n          instance: instance,\n          property: this,\n          method: 'assign',\n          role: 'child',\n          key: this.key,\n          newOwner: instance,\n          oldOwner: oldOwner,\n          preserveOwner: () => {\n            value.owner = oldOwner;\n          }\n        };\n\n        if (typeof value.onAssigned === 'function') {\n          value.onAssigned(event);\n        }\n\n        value.dispatch(this.key, event);\n      }\n    }\n\n    /**\n     * getter\n     * @param instance\n     * @returns {*}\n     */\n    get (instance) {\n      const value = instance._state[this._key];\n\n      // dispatch event\n      instance.dispatch(this._key, {\n        instance: instance,\n        target: instance,\n        property: this,\n        method: 'get',\n        key: this._key,\n        value: value\n      });\n\n      return value;\n    }\n\n    getType (type) {\n      for (let i = 0; i < this._types.length; i++) {\n        if (this._types[i].constructor === type.constructor) {\n          return this._types[i];\n        }\n      }\n      // TODO: proper error\n      throw new Error('Type not found');\n    }\n\n    get path () {\n      return this._path;\n    }\n\n    get key () {\n      return this._key;\n    }\n\n    get types () {\n      return this._types;\n    }\n\n    get defaultValue () {\n      return this.primaryType._defaultValue;\n    }\n\n    get isSingleType () {\n      return this._types.length === 1;\n    }\n\n    get isInterface () {\n      return this.is(Axial.Interface);\n    }\n\n    get primaryType () {\n      return this._types[0];\n    }\n\n    get deepPrimaryArrayType () {\n      let type = this._types[0];\n      if (!(type instanceof AxialArray)) {\n        return null;\n      }\n      while (type instanceof AxialArray && type._type && !(type instanceof AxialInstanceArray)) {\n        type = type._type;\n      }\n      return type;\n    }\n\n    get primaryInterface () {\n      return this._types.find(type => type instanceof AxialInterface);\n    }\n\n    get primaryArrayType () {\n      const array = this._types.find(type => type instanceof AxialArray);\n      return array ? array.type : null;\n    }\n\n    get isRequired () {\n      for (let i = 0; i < this._types.length; i++) {\n        if (this._types[i]._required) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    get exports () {\n      for (let i = 0; i < this._types.length; i++) {\n        if (!this._types[i]._exports) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  class AxialBinding {\n    constructor (instance, key, handler) {\n      this._instance = instance;\n      this._key = key;\n      this._property = instance.property(this._key);\n      this._handler = handler;\n      this._active = false;\n    }\n\n    bind () {\n      this._instance.bind(this._key, this._handler);\n      this._active = true;\n      _bindings.push(this);\n    }\n\n    unbind () {\n      this._instance.unbind(this._key, this._handler);\n      this._active = false;\n      const i = _bindings.indexOf(this);\n      _bindings.splice(i, 1);\n    }\n\n    dispose () {\n      if (this._active) {\n        this.unbind();\n      }\n      delete this._instance;\n      delete this._handler;\n    }\n\n    get () {\n      return this._instance._state[this._key];\n    }\n\n    get instance () {\n      return this._instance;\n    }\n\n    get key () {\n      return this._key;\n    }\n\n    get property () {\n      return this._property;\n    }\n\n    get handler () {\n      return this._handler;\n    }\n\n    get isActive () {\n      return this._active;\n    }\n\n    toString () {\n      return this._instance.toString() + ':' + this._key;\n    }\n  }\n\n  class AxialInstanceArray {\n    constructor (instance, property, array = []) {\n      this._instance = instance;\n      this.id = getInstanceId(AxialInstanceArray);\n      this._property = property;\n      this._key = property.key;\n      this._indexLength = null;\n      const self = this;\n\n      // expand items to instances if interface type\n      this._array = array;\n      if (array.length) {\n        this._array = this.convertArray(array);\n      }\n      this.length = this._array.length;\n\n      _arrayMembers.forEach(member => {\n        // stub each member of Array.prototype\n        // validate arguments if mutator...\n        Object.defineProperty(this, member, {\n          enumerable: false,\n\n          value: function () {\n            let args = Array.prototype.slice.call(arguments);\n            const isMutator = _arrayMutators.indexOf(member) > -1;\n            let hasValidated = true;\n\n            if (member === 'push') {\n              property.validate(args, self._instance);\n              args = this.convertArray(args);\n            } else if (member === 'splice') {\n              if (args.length > 2) {\n                // inserting\n                property.validate(args.slice(2), self._instance);\n              }\n              args = this.convertArray(args);\n            } else if (member === 'unshift') {\n              property.validate(args, self._instance);\n              args = this.convertArray(args);\n            } else if (member === 'fill') {\n              property.primaryType.isItem(args);\n              args = [args[0]];\n              args = this.convertArray(args);\n            } else {\n              hasValidated = true;\n            }\n\n            let oldLength = this._array.length;\n            let returnValue = Array.prototype[member].apply(this._array, args);\n            this.length = this._array.length;\n\n            // ...otherwise validate array (is valid type?) afterwards\n            if (!hasValidated) {\n              property.validate(this._array, self._instance);\n            }\n\n            // if this is an array mutator method, dispatch event\n            if (isMutator) {\n              self.bindIndexes();\n              this.dispatch(this._key, {\n                instance: instance,\n                property: this._property,\n                method: 'set',\n                arrayMethod: member,\n                key: this._key,\n                value: this,\n                newValue: this,\n                oldValue: null,\n                oldLength: oldLength,\n                newLength: this._array.length\n              });\n            }\n\n            return returnValue;\n          }\n        });\n      });\n\n      this.bindIndexes();\n    }\n\n    bindIndexes () {\n      const array = this._array;\n      const instance = this._instance;\n      const property = this._property;\n      // delete previous indexes\n      if (this._indexLength) {\n        const l = this._indexLength;\n        for (let i = 0; i < l; i++) {\n          delete this[i];\n        }\n      }\n      // write each index as an accessor\n      const l = array.length + 1;\n      for (let i = 0; i < l; i++) {\n        this._indexLength++;\n        const key = '' + i;\n        if (!this.hasOwnProperty(key)) {\n          Object.defineProperty(this, key, {\n            get: function () {\n              // dispatch event\n              instance.dispatch(property.key, {\n                instance: instance,\n                property: property,\n                arrayMethod: 'index',\n                method: 'get',\n                index: i,\n                key: property.key,\n                value: array[i]\n              });\n              return array[i];\n            },\n            set: function (value) {\n              const oldValue = array[i];\n              const rawValue = value;\n\n              property.validate([value], instance);\n\n              // convert to AxialInstance if Interface and object given\n              const arrayType = property.primaryArrayType;\n              if (arrayType && util.isPlainObject(value) && arrayType.is(value)) {\n                value = arrayType.create(value, instance);\n              }\n\n              // convert to AxialInstanceArray if array\n              if (property.is(Axial.Array()) && Array.isArray(value)) {\n                value = new AxialInstanceArray(instance, property, value);\n              }\n\n              // convert to bound function (if function)\n              if (property.is(Axial.Function) && typeof value === 'function' && !value._isAxialBound) {\n                const fn = value;\n                value = function () {\n                  // dispatch call, execute function\n                  instance.dispatch(property._key, {\n                    instance: instance,\n                    property: property,\n                    method: 'call',\n                    key: property._key,\n                    value: arguments,\n                    arguments: arguments,\n                    newValue: fn,\n                    oldValue: fn\n                  });\n\n                  return fn.apply(instance, arguments);\n                }.bind(this);\n                value._isAxialBound = true;\n              }\n\n              array[i] = value;\n\n              instance.dispatch(property.key, {\n                instance: instance,\n                property: property,\n                arrayMethod: 'index',\n                method: 'set',\n                index: i,\n                key: property.key,\n                value: value,\n                oldValue: oldValue,\n                newValue: rawValue\n              });\n            },\n            enumerable: true,\n            configurable: true\n          });\n        }\n      }\n    }\n\n    dispatch (key, e) {\n      this._instance.dispatch(key, e);\n    }\n\n    static get id () {\n      return 'AxialInstanceArray';\n    }\n\n    convertArray (rawArray) {\n      // convert plain array to array of wrapped objects ~ AxialInstance or AxialInstanceArray or value\n      const array = [];\n      const l = rawArray.length;\n      for (let i = 0; i < l; i++) {\n        const item = rawArray[i];\n        if (item instanceof AxialInstance || item instanceof AxialInstanceArray) {\n          array[i] = item;\n          continue;\n        }\n        const deepPrimaryArrayType = this.property.deepPrimaryArrayType;\n        if (deepPrimaryArrayType && deepPrimaryArrayType instanceof AxialInterface && deepPrimaryArrayType.is(item)) {\n          // find primary type form array\n          array[i] = deepPrimaryArrayType.create(item, this._instance);\n          continue;\n        }\n        const type = Axial.typeOf(item);\n        if (type instanceof AxialInterface) {\n          // create instance of interface with item as default values\n          array[i] = type.create(item, this._instance);\n          continue;\n        } else if (type instanceof AxialArray) {\n          array[i] = new AxialInstanceArray(this._instance, this._property, item);\n          continue;\n        }\n        // plain value\n        array[i] = item;\n      }\n      return array;\n    }\n\n    equals (array) {\n      if (this === array) {\n        return true;\n      }\n      const targetArray = array instanceof AxialInstanceArray ? array._array : array;\n      if (array.length !== this.length || !Array.isArray(targetArray)) {\n        return false;\n      }\n      // iterate through and check equal items\n      const l = targetArray.length;\n      const sourceArray = this._array;\n      for (let i = 0; i < l; i++) {\n        const sourceItem = sourceArray[i];\n        const targetItem = targetArray[i];\n        if (sourceItem instanceof AxialInstance) {\n          if (targetItem instanceof AxialInstance) {\n            return sourceItem.equals(targetItem);\n          } else {\n            return false;\n          }\n        } else if (sourceItem instanceof AxialInstanceArray) {\n          if (targetItem instanceof AxialInstanceArray) {\n            return sourceItem.equals(targetItem);\n          } else {\n            return false;\n          }\n        } else if (sourceItem !== targetItem) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    add (/*items, ...*/) {\n      const items = util.argsToItems.apply(null, arguments);\n      this.push.apply(this, items);\n    }\n\n    remove (/*items, ...*/) {\n      const array = this._array;\n      const items = util.argsToItems.apply(null, arguments);\n      const l = items.length;\n      for (let i = 0; i < l; i++) {\n        const item = items[i];\n        const index = array.indexOf(item);\n        this.splice(index, 1);\n      }\n      this.length = this._array.length;\n    }\n\n    contains (/*items, ...*/) {\n      const items = util.argsToItems.apply(null, arguments);\n      const l = items.length;\n      const array = this._array;\n      for (let i = 0; i < l; i++) {\n        if (array.indexOf(items[i]) > -1) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    move (fromIndex, toIndex) {\n      const item = this.splice(fromIndex, 1)[0];\n      this.splice(toIndex, 0, item);\n      return item;\n    }\n\n    moveUp (item) {\n      const fromIndex = this.indexOf(item);\n      if (fromIndex > 0) {\n        this.move(fromIndex, fromIndex - 1);\n        return true;\n      }\n      return false;\n    }\n\n    moveDown (item) {\n      const fromIndex = this.indexOf(item);\n      if (fromIndex > -1 && fromIndex < this._array.length - 1) {\n        this.move(fromIndex, fromIndex + 1);\n        return true;\n      }\n      return false;\n    }\n\n    shiftLeft () {\n      const item = this.shift();\n      this.push(item);\n      return item;\n    }\n\n    shiftRight () {\n      const item = this.pop();\n      this.unshift(item);\n      return item;\n    }\n\n    first () {\n      return this._array[0];\n    }\n\n    last () {\n      return this._array[this._array.length - 1];\n    }\n\n    plural () {\n      return this.length === 1 ? '' : 's';\n    }\n\n    get isEmpty() {\n      return this.length === 0;\n    }\n\n    get instance () {\n      return this._instance;\n    }\n\n    get property () {\n      return this._property;\n    }\n\n    get key () {\n      return this._key;\n    }\n\n    get array () {\n      return this._array;\n    }\n\n    toPlainObject () {\n      const array = [];\n      const l = this._array.length;\n      for (let i = 0; i < l; i++) {\n        const item = this._array[i];\n        if (item instanceof AxialInstance) {\n          array[i] = item.toPlainObject();\n        } else if (item instanceof AxialInstanceArray) {\n          array[i] = item.toPlainObject();\n        } else {\n          array[i] = item;\n        }\n      }\n      return array;\n    }\n\n    stringify (prettyPrint) {\n      return JSON.stringify.call(null, this.toPlainObject(), null, prettyPrint === true ? 4 : undefined);\n    }\n  }\n\n  // -------------------------------------------------------------------------------------- Util\n  util = {\n    isPlainObject (o) {\n      let t = o;\n      return typeof o !== 'object' || o === null ?\n        false :\n        (function () {\n          while (true) {\n            if (Object.getPrototypeOf(t = Object.getPrototypeOf(t)) === null) {\n              break;\n            }\n          }\n          return Object.getPrototypeOf(o) === t;\n        })();\n    },\n\n    merge (source, target) {\n      let copy = (_source, _target) => {\n        for (let key in _target) {\n          if (_target.hasOwnProperty(key)) {\n            let sourceValue = _source[key];\n            let targetValue = _target[key];\n            if (this.isPlainObject(targetValue)) {\n              if (this.isPlainObject(sourceValue)) {\n                copy(sourceValue, targetValue);\n              } else {\n                let obj = {};\n                _source[key] = obj;\n                copy(obj, targetValue);\n              }\n            } else {\n              _source[key] = targetValue;\n            }\n          }\n        }\n        return source;\n      };\n      return copy(source, target);\n    },\n\n    typeOf (value, nativeOnly) {\n      if (value instanceof AxialInstance) {\n        if (nativeOnly) {\n          return T.Object;\n        }\n        return value.iface;\n      }\n      if (T.Null.is(value)) {\n        return T.Null;\n      } else if (T.Undefined.is(value)) {\n        return T.Undefined;\n      } else if (T.String.is(value)) {\n        return T.String\n      } else if (T.Number.is(value)) {\n        return T.Number\n      } else if (T.Boolean.is(value)) {\n        return T.Boolean\n      } else if (T.Date.is(value)) {\n        return T.Date\n      } else if (T.Regex.is(value)) {\n        return T.Regex\n      } else if (T.Function.is(value)) {\n        return T.Function\n      } else if (T.Array.is(value)) {\n        if (nativeOnly) {\n          return T.Array();\n        }\n        if (value.length) {\n          return T.Array(this.typeOf(value[0]));\n        } else {\n          return T.Array();\n        }\n      } else if (T.Object.is(value)) {\n        return T.Object\n      } else if (T.Interface.is(value)) {\n        if (nativeOnly) {\n          return T.Object;\n        }\n        return T.Interface;\n      }\n      throw new AxialUnsupportedType(value);\n    },\n\n    isType (type) {\n      type = Array.isArray(type) ? type : [type];\n      const l = type.length;\n      for (let i = 0; i < l; i++) {\n        if (!(type[i] instanceof AxialType)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    getObjectPaths (obj, includeBranchPaths) {\n      let keys = [];\n      let ref = null;\n      let path = null;\n      let walk = (o, p) => {\n        for (let k in o) {\n          if (o.hasOwnProperty(k)) {\n            ref = o[k];\n            path = p ? p + '.' + k : k;\n            if (this.isPlainObject(ref)) {\n              if (includeBranchPaths === true) {\n                keys.push(path);\n              }\n              walk(ref, path);\n            } else {\n              keys.push(path);\n            }\n          }\n        }\n      };\n      walk(obj);\n      return keys;\n    },\n\n    getObjectPathValues (obj, includeBranchPaths) {\n      let keyValues = [];\n      let ref = null;\n      let path = null;\n      let walk = (o, p) => {\n        for (let k in o) {\n          if (o.hasOwnProperty(k)) {\n            ref = o[k];\n            path = p ? p + '.' + k : k;\n            if (this.isPlainObject(ref)) {\n              if (includeBranchPaths === true) {\n                keyValues.push({path: path, value: ref, isBranch: true});\n              }\n              walk(ref, path);\n            } else {\n              keyValues.push({path: path, value: ref, isBranch: false});\n            }\n          }\n        }\n      };\n      walk(obj);\n      return keyValues;\n    },\n\n    getObjectAtPath (obj, path, shouldThrowIfNotFound) {\n      let steps = path.split('.');\n      let l = steps.length;\n      let ref = obj;\n      let k = null;\n      for (let i = 0; i < l; i++) {\n        k = steps[i];\n        ref = ref[k];\n        if (ref === null || typeof ref === 'undefined') {\n          if (shouldThrowIfNotFound === true) {\n            throw new AxialUndefinedValue(obj, path);\n          }\n          return ref;\n        }\n      }\n      return ref;\n    },\n\n    setObjectAtPath (obj, path, value) {\n      let ref = obj;\n      let steps = path.split('.');\n      let l = steps.length - 1;\n      let k = null;\n      for (let i = 0; i < l; i++) {\n        k = steps[i];\n        if (!ref.hasOwnProperty(k)) {\n          ref[k] = {};\n        }\n        ref = ref[k];\n      }\n      ref[steps[l]] = value;\n    },\n\n    multiSetObjectAtPath (obj, pathOrObject, value) {\n      let modifiedPaths = null;\n      if (this.isPlainObject(pathOrObject)) {\n        this.merge(obj, pathOrObject);\n        modifiedPaths = this.getObjectPaths(pathOrObject);\n      } else if (typeof pathOrObject === 'string') {\n        this.setObjectAtPath(obj, pathOrObject, value);\n        modifiedPaths = [pathOrObject];\n      }\n      return modifiedPaths;\n    },\n\n    expandDotSyntaxKeys (obj, resolver) {\n      for (let path in obj) {\n        if (obj.hasOwnProperty(path)) {\n          if (path.indexOf('.') > -1) {\n            const key = path.split('.')[0];\n            resolver(path, key, obj[path]);\n            delete obj[path];\n          }\n        }\n      }\n      return obj;\n    },\n\n    expandArray (inArray, outArray = []) {\n      const l = inArray.length;\n      for (let i = 0; i < l; i++) {\n        const item = inArray[i];\n        if (Array.isArray(item)) {\n          this.expandArray(item, outArray);\n        } else {\n          outArray[outArray.length] = item;\n        }\n      }\n      return outArray;\n    },\n\n    stringify (value, refs = []) {\n      if (typeof value === 'function') {\n        return 'function () {...}';\n      }\n      if (Array.isArray(value)) {\n        return '[#' + value.length + ']';\n      }\n      if (value instanceof AxialInstance) {\n        if (refs.indexOf(value) > -1) {\n          return 'circular!' + value.toString();\n        } else {\n          refs.push(value);\n        }\n        const props = value.map((k, v) => k + ':' + this.stringify(v, refs));\n        return '*' + value.iface.id + '#' + value.id + '{' + props.join(', ') + '}';\n      }\n      if (value instanceof AxialInstanceArray) {\n        return '*array#' + value.id + '[' + value.length + ']';\n      }\n      try {\n        return JSON.stringify(value);\n      } catch (e) {\n        return '' + value;\n      }\n    },\n\n    argsToItems () {\n      const array = [];\n      const l = arguments.length;\n      if (l === 1 && Array.isArray(arguments[0])) {\n        array.push.apply(array, arguments);\n      } else if (l > 0) {\n        for (let i = 0; i < l; i++) {\n          const item = arguments[i];\n          array.push(item);\n        }\n      }\n      return array;\n    },\n\n    toString (value) {\n      if (value instanceof AxialInstance || value instanceof AxialInstanceArray) {\n        return value.id;\n      }\n      try {\n        return JSON.stringify(value);\n      } catch (e) {\n        return '' + value;\n      }\n    }\n  };\n\n  // -------------------------------------------------------------------------------------- Define Types\n  T = {\n    Null: new AxialNull,\n    Undefined: new AxialUndefined,\n    String: new AxialString,\n    Number: new AxialNumber,\n    Boolean: new AxialBoolean,\n    Date: new AxialDate,\n    Regex: new AxialRegex,\n    Function: new AxialFunction,\n    Array: function (type) {\n      const typeId = type ? type.id : '*';\n      let t = _arrayTypes[typeId];\n      if (t) {\n        return t;\n      } else {\n        t = _arrayTypes[typeId] = new AxialArray(type);\n        t._baseType = this.Array();\n        t._id = 'array[' + typeId + ']';\n      }\n      return t;\n    },\n    Object: new AxialObject,\n    Interface: new AxialInterface(null),\n    Reference: new AxialReference(),\n    Anything: new AxialAnything()\n  };\n\n  Object.keys(T).forEach(typeName => {\n    T[typeName].orUndefined = function () {\n      return [T[typeName], Axial.Undefined];\n    };\n    T[typeName].orNull = function () {\n      return [T[typeName], Axial.Null];\n    };\n    T[typeName].orUndefinedOrNull = function () {\n      return [T[typeName], Axial.Undefined, Axial.Null];\n    };\n  });\n\n  T.Array.is = function (value) {\n    if (value instanceof AxialInstanceArray) {\n      return true;\n    }\n    return Array.isArray(value);\n  };\n  T.Array.Type = T.Array();\n\n  // -------------------------------------------------------------------------------------- Axial\n  const Axial = {\n    define (id, prototype) {\n      return new AxialInterface(id, prototype);\n    },\n    getInterface (id = 'null') {\n      // return first one defined (allows easy mocking/testing)\n      const ifaceArray = _interfaces[id];\n      if (ifaceArray) {\n        return ifaceArray[ifaceArray.length - 1];\n      }\n    },\n    interfaceIds () {\n      return Object.keys(_interfaces).filter(id => {\n        const ifaceArray = _interfaces[id];\n        return ifaceArray[0].isRootInterface;\n      });\n    },\n    interfaces () {\n      const o = {};\n      this.interfaceIds().forEach(id => o[id] = _interfaces[id]);\n      return o;\n    },\n    get instances () {\n      return _instances;\n    },\n    get bindings () {\n      return _bindings;\n    },\n    get bindingInfo () {\n      return this.bindings.map(binding => binding.instance.id + ':' + binding.key);\n    },\n    getInstance (id) {\n      const arrayAtKey = _instances[id];\n      return Array.isArray(arrayAtKey) ? arrayAtKey[arrayAtKey.length - 1] : null;\n    },\n    instances () {\n      return _instances;\n    },\n    instanceCount () {\n      const count = {};\n      for (let id in _instances) {\n        if (_instances.hasOwnProperty(id)) {\n          count[id] = _instances[id].length;\n        }\n      }\n      return count;\n    },\n    instancesCreated (includeSubInterfaces) {\n      return _instancesCreated.filter(iface => includeSubInterfaces || iface.isRootInterface).map(iface => iface.id);\n    },\n    bind (fn) {\n      _listeners.push(fn);\n    },\n    unbind (fn) {\n      if (fn) {\n        const index = _listeners.indexOf(fn);\n        _listeners.splice(index, 1);\n      } else {\n        _listeners.length = 0;\n      }\n    },\n    dispatch (eventData) {\n      if (_logListenerCount) {\n        // logging is a separate listener collection,\n        // in case Axial.unbind() is called logging can continue.\n        this.log(eventData);\n      }\n      const l = _listeners.length;\n      for (let i = 0; i < l; i++) {\n        let returnValue = _listeners[i](eventData);\n        if (returnValue) {\n          return returnValue;\n        }\n      }\n    },\n    Binding: AxialBinding,\n    CONST: CONST,\n    Instance: new AxialInstance(),\n    InstanceArray: AxialInstanceArray,\n    util: util,\n    addLogListener (method, fn) {\n      _logListeners[method] = _logListeners[method] || [];\n      _logListeners[method].push(fn);\n      _logListenerCount++;\n      return this;\n    },\n    removeLogListener (method, fn) {\n      if (typeof fn === 'undefined') {\n        _logListeners[method] = [];\n        return;\n      }\n      const index = _logListeners[method].indexOf(fn);\n      _logListeners[method].splice(index, 1);\n      _logListenerCount--;\n      return this;\n    },\n    log (e) {\n      if (_logListeners.hasOwnProperty(e.method)) {\n        const array = _logListeners[e.method];\n        const l = array.length;\n        for (let i = 0; i < l; i++) {\n          array[i](e);\n        }\n      }\n    },\n    addDefaultLogListeners () {\n      this.addLogListener('get', e => {\n        if (typeof e.value === 'function') {\n          console.log('%cGET: ' + (e.instance.toString() + '.' + e.key) + (e.hasOwnProperty('index') ? '[' + e.index +  ']' : '')  + ':<' + e.property.types.join('|') + '>()', 'color:#999');\n        } else {\n          console.log('%cGET: ' + (e.instance.toString() + '.' + e.key) + (e.hasOwnProperty('index') ? '[' + e.index +  ']' : '')  + ':<' + e.property.types.join('|') + '> = ' + util.toString(e.value), 'color:#999');\n        }\n      }).addLogListener('set', e => {\n        console.log('%cSET: ' + e.property.path + ':<' + e.property.types.join('|') + '> = ' + util.stringify(e.value), 'color:orange');\n      }).addLogListener('call', e => {\n        const args = [];\n        const l = e.arguments.length;\n        for (let i = 0; i < l; i++) {\n          let arg;\n          try {\n            arg = JSON.stringify(e.arguments[i]);\n          } catch (ex) {\n            arg = util.typeOf(e.arguments[i]).id;\n          }\n          args.push(arg + ':' + typeof e.arguments[i]);\n        }\n        console.log('%cCALL: ' + e.property.path + `(${args.length ? '<' : ''}` + args.join('>, <') + `${args.length ? '>' : ''})`, 'color:pink');\n      });\n    },\n    typeOf (value, nativeOnly) {\n      const type = util.typeOf(value, nativeOnly);\n      if (type.constructor === AxialObject) {\n        if (nativeOnly) {\n          return type;\n        }\n        const ifaceNames = this.interfaceIds();\n        const l = ifaceNames.length;\n        for (let i = 0; i < l; i++) {\n          const id = ifaceNames[i];\n          const iface = this.getInterface(id);\n          // gets latest version with same id\n          if (iface.is(value)) {\n            return iface;\n          }\n        }\n      }\n      return type;\n    },\n    debug () {\n      this.addDefaultLogListeners();\n    }\n  };\n\n  // syntax sugar\n  Axial.$ = Axial.getInterface;\n  Axial.$$ = Axial.getInstance;\n\n  // merge in types and errors\n  util.merge(Axial, T);\n  util.merge(Axial, Errors);\n\n  // extend misc types public interface\n  AxialInterface.prototype.new = AxialInterface.prototype.create;\n  AxialType.prototype.set = AxialType.prototype.defaultValue;\n\n  if (typeof window !== 'undefined') {\n    window.Axial = Axial;\n  }\n\n  return Axial;\n})();\n\n\n// WEBPACK FOOTER //\n// ./lib/axial.js","module.exports = {\n  BLANK_INTERFACE_NAME: 'anonymous',\n  VALID_KEYS: ['_state', '_listeners', 'isWatching', 'super', 'id', 'iface', 'owner', '_lockedPaths'],\n  ARRAY_MEMBERS: [\n    'concat',\n    'copyWithin',\n    'entries',\n    'every',\n    'fill',\n    'filter',\n    'find',\n    'findIndex',\n    'forEach',\n    'includes',\n    'indexOf',\n    'join',\n    'keys',\n    'lastIndexOf',\n    'map',\n    'pop',\n    'push',\n    'reduce',\n    'reduceRight',\n    'reverse',\n    'shift',\n    'slice',\n    'some',\n    'sort',\n    'splice',\n    'toLocaleString',\n    'toSource',\n    'toString',\n    'unshift',\n    'values'\n  ],\n  ARRAY_MUTATORS: [\n    'copyWithin',\n    'fill',\n    'pop',\n    'push',\n    'reverse',\n    'shift',\n    'sort',\n    'splice',\n    'unshift'\n  ],\n  ARRAY_MUTATORS_REQUIRE_ARGS_VALIDATED: [\n    'fill',\n    'push',\n    'splice',\n    'unshift'\n  ]\n};\n\n\n// WEBPACK FOOTER //\n// ./lib/const.js"],"sourceRoot":""}